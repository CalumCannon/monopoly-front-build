{"version":3,"sources":["models/Card.js","models/Square.js","models/Player.js","components/Square.js","helpers/logic/DiceLogic.js","components/EndTurn.js","helpers/logic/ButtonLogic.js","components/Dice.js","components/Purchase.js","components/PlayerInterface.js","components/HoverZoom.js","components/BoardSide.js","helpers/Vec2.js","helpers/RenderHelperClass.js","containers/Renderer.js","containers/Board.js","components/PlayerStatus.js","helpers/logic/DisplayLogic.js","helpers/logic/ActionLogic.js","helpers/Request.js","containers/Game.js","App.js","serviceWorker.js","index.js"],"names":["Card","type","text","method","adjustor","Object","classCallCheck","this","player","money","position","goojfCard","players","_this","forEach","owedPlayer","_this2","debtPlayer","addMoney","subtractMoney","movePlayer","addGoojfCard","performRepairs","moveToStation","moveToUtility","giveToPlayers","receiveFromPlayers","alert","Square","name","squareNumber","setColor","purchasePrice","rents","buildCost","setRent","mortgage","unmortgage","owner","rentLevel","fullSet","Player","color","properties","jailStatus","timeInJail","moveValue","passGoCheck","property","console","log","square","push","checkIfFullSetOwned","set","filter","owned","partsOfSetOwned","ownedSize","length","props","react_default","a","createElement","style","backgroundColor","className","src","cornerImage","card","title","rent","price","diceLogic","checkForDouble","firstDiceValue","secondDiceValue","newValue","actionsIfDouble","actionsIfNotDouble","checkIfDouble","updatePlayerPosition","updateDoubleCount","updateRolled","showDiceFace","EndTurn","possibleConstructorReturn","getPrototypeOf","call","handleEndTurnClick","bind","assertThisInitialized","updateActivePlayer","onClick","Component","buttonLogic","checkIfCurrentGame","noOfPlayers","checkIfCanRoll","rolled","disabled","checkIfCanBuyProperty","checkIfTurnEnd","components_EndTurn","checkIfGameStarted","components_Dice","won","doubleCount","setMoveValue","Dice","state","rollMessage","doubleRollMessage","firstFace","secondFace","handleRollDiceClick","Math","floor","random","setState","getRandomRoll","rollDiceButton","border","height","width","left","Purchase","handleBuyProperty","purchaseProperty","currentSquare","squares","activePlayer","purchaseButton","PlayerInterface","handleManageProperty","getPropertyList","map","propertyList","components_Purchase","HoverZoom","currentTile","includes","info","generateCardInfo","background","fontSize","BoardSide","returnSquare","colour","Option","isColour","components_Square","key","index","isCornerBlock","returnCorner","boardSide","Vec2","x","y","RenderHelper","canvas","ctx","p1","p2","p3","p4","playerIndex","targetIndex","clearCanvas","renderAllPlayers","setTimeout","moveAndRenderLoop","positionIndex","offset","calculateCoordinates","beginPath","arc","PI","fillStyle","fill","stroke","baseX","clearRect","playerprops","i","renderPlayer","Renderer","renderer","playerPositions","current","refs","getContext","renderPlayersFromProps","playerPosChanged","ref","id","Board","currentTileSelected","handleMouseMove","updateMessage","event","clientX","clientY","elem","document","elementFromPoint","tileIndex","components_HoverZoom","endButton","dice","hoverComponent","getHoverComponent","handleLoading","bottomrow","slice","reverse","leftrow","toprow","rightrow","onMouseMove","containers_Renderer","board","boardElement","components_BoardSide","components_PlayerInterface","renderInit","PlayerStatus","activePlayerBool","generatePlayerStatusElements","displayLogic","checkIfStatusCanDisplay","components_PlayerStatus","actionLogic","checkCurrentAction","payTax","pickBonusCard","goToJail","payRent","additionalAction","determineMessage","receiveRent","drawAndReplaceChance","determineMethod","drawAndReplaceChest","chanceCards","shift","chestCards","inJail","Request","url","fetch","then","res","json","Game","activePlayerIndex","mostRecentAction","startNewGame","request","get","data","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","information","adjuster","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","setColour","inMesage","shuffleCards","array","j","_ref","moveCount","getActivePlayer","double","updatePosition","generateMoveString","_this3","newIndex","updateMessageActivePlayer","newPlayer","generateNewTurnString","currentProperty","buyProperty","updateMessagePropertyBought","utility","station","newGameButton","playerStatus","mostRecentActionDisplay","returnMessage","containers_Board","App","containers_Game","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.94702feb.chunk.js","sourcesContent":["class Card {\n\n  constructor(type, text, method, adjustor){\n    this.type = type\n    this.text = text\n    this.method = method\n    this.adjustor = adjustor\n  }\n\n  // CARD METHODS\n\n  addMoney(player){\n    player.money += this.adjustor;\n  }\n\n  subtractMoney(player){\n    player.money -= this.adjustor;\n  }\n\n  movePlayer(player){\n    // Check for specific card\n    if (this.text === \"Go back 3 spaces.\"){\n      player.position -= 3\n    } else {\n            // Check if this will make the player pass go\n      if ((player.position > this.adjustor) && (this.adjustor !== 10)){\n        player.money += 200\n      }\n      // Move to specified position\n      player.position = this.adjustor\n    }\n  }\n\n  addGoojfCard(player){\n    player.goojfCard = true\n  }\n\n  performRepairs(player){\n\n  }\n\n// STILL NEED TO ADD DOUBLE RENT\n  moveToStation(player){\n    // let pos = player.position\n\n    if (player.position < 15){\n      player.position = 15\n    } else if (player.position >= 15 && player.position < 25) {\n      player.position = 25\n    } else if (player.position >= 35) {\n      player.position = 5\n      player.money += 200\n    }\n  }\n\n// STILL NEED TO ADD INCREASED RENT\n  moveToUtility(player){\n    // let pos = player.position\n\n    if (player.position < 12){\n      player.position = 12\n    } else if (player.position >= 12 && player.position < 28) {\n      player.position = 28\n    } else if (player.position >= 28) {\n      player.position = 12\n      player.money += 200\n    }\n  }\n\n  giveToPlayers(player, players){\n    players.forEach((owedPlayer) => {\n      if (owedPlayer !== player) {\n        owedPlayer.money += this.adjustor\n        player.money -= this.adjustor\n      }\n    })\n  }\n\n  receiveFromPlayers(player, players){\n    players.forEach((debtPlayer) => {\n      if (debtPlayer !== player) {\n        debtPlayer.money -= this.adjustor\n        player.money += this.adjustor\n      }\n    })\n  }\n\n  determineMethod(player, players){\n    switch(this.method){\n      case 1:\n      this.addMoney(player)\n      break;\n      case 2:\n      this.subtractMoney(player)\n      break;\n      case 3:\n      this.movePlayer(player)\n      break;\n      case 4:\n      this.addGoojfCard(player)\n      break;\n      case 5:\n      this.performRepairs(player)\n      break;\n      case 6:\n      this.moveToStation(player)\n      break;\n      case 7:\n      this.moveToUtility(player)\n      break;\n      case 8:\n      this.giveToPlayers(player, players)\n      break;\n      case 9:\n      this.receiveFromPlayers(player, players)\n    }\n    alert(this.text)\n  }\n\n  // applyMethod(player){\n  //   this.lookupMethod()\n  // }\n\n}\n\nexport default Card;\n","class Square {\n\n  constructor(name, squareNumber, setColor, purchasePrice, rents, buildCost){\n    this.name = name\n    this.squareNumber = squareNumber\n    this.setColor = setColor\n    this.purchasePrice = purchasePrice\n    this.rents = rents\n    this.buildCost = buildCost\n    this.setRent = (rents[0] * 2)\n    this.mortgage = (purchasePrice / 2)\n    this.unmortgage = (this.mortgage * 1.1)\n    this.owner = null\n    this.rentLevel = 0\n    this.fullSet = false\n\n  }\n\n\n}\n\nexport default Square;\n","class Player {\n\n  constructor(name, color){\n    this.name = name\n    this.money = 1500\n    this.color = color\n    this.properties = []\n    this.position = 0\n    this.jailStatus = false\n    this.timeInJail = 0\n    this.goojfCard = false\n  }\n\n\n// Simple update Position without any Jail concerns\n  updatePosition(moveValue){\n    this.passGoCheck(moveValue)\n    // %40 ensures that the position does not go above 40, and continues around the board\n    this.position = (this.position + moveValue) % 40\n  }\n\n  passGoCheck(moveValue){\n    if( this.position + moveValue >= 40){\n      this.money += 200\n    }\n  }\n\n// Simple rent without dealing with housess\n  payRent(property, moveValue){\n    if(property.fullSet === true){\n      this.money -= (property.rents[property.rentLevel] * 2)\n    } else if (property.setColor === \"utility\") {\n      this.money -= (moveValue * property.rents[property.rentLevel])\n      console.log(moveValue);\n      console.log(property.rents[property.rentLevel]);\n      console.log((moveValue * property.rents[property.rentLevel]));\n    } else {\n      this.money -= property.rents[property.rentLevel]\n    }\n  }\n\n// Simple rent without dealing with houses\n  receiveRent(property, moveValue){\n    if(property.fullSet === true){\n      this.money += (property.rents[property.rentLevel] * 2)\n    } else if (property.setColor === \"utility\") {\n      this.money += (moveValue * property.rents[property.rentLevel])\n    } else {\n      this.money += property.rents[property.rentLevel]\n    }\n  }\n\n  checkMoney(){\n    return this.money\n  }\n\n  buyProperty(square){\n    this.money -= square.purchasePrice\n    this.properties.push(square)\n    this.checkIfFullSetOwned(square);\n\n  }\n\n  partsOfSetOwned(square){\n    let set = square.setColor\n    let owned = this.properties.filter(property => property.setColor === set)\n    return owned\n  }\n\n  checkIfFullSetOwned(square){\n    let set = square.setColor\n    let owned = this.partsOfSetOwned(square)\n    let ownedSize = owned.length\n\n    if ((set === \"darkblue\" || set === \"brown\") && ownedSize === 2) {\n      owned.forEach(property => property.fullSet = true)\n    } else if (ownedSize === 3) {\n      owned.forEach(property => property.fullSet = true)\n      }\n    }\n\n}\n\n\nexport default Player;\n","import React from 'react';\n\nconst Square = (props) => {\n\n  //if corner block\n  if(props.type == \"Corner\"){\n    return(\n      //Switch statement for type of corner block\n      <div style={{backgroundColor: \"grey\"}}  className=\"tileCorner\">\n      <img className=\"cornerImage\" src={props.cornerImage} />\n      </div>\n    );\n  }\n\n  if(props.card.name == \"Chance\" || props.card.name == \"Community Chest\" ){\n    return(\n      <div title={props.card.squareNumber} className=\"tile\">\n          <div className=\"tileInfo\">\n            <p className=\"tileText\">{props.card.name}</p>\n        </div>\n      </div>\n    );\n  }\n\n  if(props.card.setColor == \"tax\"){\n    return(\n      <div title={props.card.squareNumber} className=\"tile\">\n          <div className=\"tileInfo\">\n            <p className=\"tileText\">{props.card.name}</p>\n            <p className=\"tileText\">Pay: {props.card.rent}</p>\n        </div>\n      </div>\n    );\n  }\n\n  //Not owned\n  if(props.type == \"non-set\" && props.card.owner == null){\n    return(\n      <div title={props.card.squareNumber} className=\"tile\">\n          <div className=\"tileInfo\">\n            <p className=\"tileText\">{props.card.name}</p>\n            <p className=\"tileText\">{props.card.purchasePrice}</p>\n        </div>\n      </div>\n    );\n  }\n\n  //Owned\n  if(props.type == \"non-set\" && props.card.owner != null){\n    return(\n      <div title={props.card.squareNumber} className=\"tile\">\n          <div className=\"tileInfo\">\n            <p className=\"tileText\">{props.card.name}</p>\n            <p className=\"tileText\">{props.card.purchasePrice}</p>\n        </div>\n          <div style={{backgroundColor : props.card.owner.color}} className=\"propertyOwnedTab\"></div>\n      </div>\n    );\n  }\n\n  //if no card\n  if(!props.card){\n    return(\n      <div title={props.card.squareNumber} className=\"tile\">\n        <div style={{backgroundColor: \"pink\"}}  className=\"tileColor\">\n          </div>\n          <div className=\"tileInfo\">\n            <p className=\"tileText\">NAME</p>\n            <p className=\"tileText\">PRICE</p>\n        </div>\n      </div>\n    );\n  }\n\n  //Property is owned\n  //CHANGE TO !=\n  if(props.card.owner != null){\n    return(\n    <div title={props.card.squareNumber} className=\"tile\">\n      <div style={{backgroundColor: props.card.setColor}}  className=\"tileColor\">\n        </div>\n        <div className=\"tileInfo\">\n          <p className=\"tileText\">{props.card.name}</p>\n          <p className=\"tileText\">{props.card.price}</p>\n          <p className=\"tileText\">{props.card.purchasePrice}</p>\n      </div>\n      <div style={{backgroundColor : props.card.owner.color}} className=\"propertyOwnedTab\">\n      </div>\n    </div>\n\n  )\n  }\n\n  //property tile\n  return(\n    <div title={props.card.squareNumber} className=\"tile\">\n      <div style={{backgroundColor: props.card.setColor}}  className=\"tileColor\">\n        </div>\n        <div className=\"tileInfo\">\n          <p className=\"tileText\">{props.card.name}</p>\n          <p className=\"tileText\">{props.card.price}</p>\n          <p className=\"tileText\">{props.card.purchasePrice}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default Square;\n","import React from 'react';\n\nconst diceLogic = {\n\n  checkForDouble(firstDiceValue, secondDiceValue, newValue, props){\n    if (firstDiceValue === secondDiceValue) {\n      this.actionsIfDouble(newValue, props)\n      return true\n    } else {\n      this.actionsIfNotDouble(newValue, props)\n    }\n  },\n\n  checkIfDouble(firstDiceValue, secondDiceValue){\n    if (firstDiceValue === secondDiceValue){\n      return true\n    } else\n    return false\n  },\n\n  actionsIfDouble(newValue, props){\n    props.updatePlayerPosition(newValue, true)\n    props.updateDoubleCount(1)\n    return true\n  },\n\n  actionsIfNotDouble(newValue, props){\n    props.updatePlayerPosition(newValue)\n    props.updateRolled()\n  },\n\n  showDiceFace(firstDiceValue){\n    switch (firstDiceValue) {\n      case 1:\n        return 'images/dice-one.png';\n      case 2:\n        return 'images/dice-two.png';\n      case 3:\n        return 'images/dice-three.png';\n      case 4:\n        return 'images/dice-four.png';\n      case 5:\n        return 'images/dice-five.png';\n      case 6:\n        return 'images/dice-six.png';\n\n    }\n  }\n\n}\n\nexport default diceLogic;\n","import React, {Component} from 'react';\n\nclass EndTurn extends Component {\n\n  constructor(props){\n    super(props)\n\n    this.handleEndTurnClick = this.handleEndTurnClick.bind(this)\n  }\n\n  handleEndTurnClick(){\n    this.props.updateActivePlayer()\n  }\n\n  render(){\n    return(\n      <button className=\"endTurnButton\" onClick={this.handleEndTurnClick}> End Turn </button>\n    )\n  }\n\n}\n\nexport default EndTurn\n","import React from 'react';\nimport EndTurn from '../../components/EndTurn';\nimport Dice from '../../components/Dice';\n\nconst buttonLogic ={\n\n\n  checkIfCurrentGame(noOfPlayers, method) {\n    if (noOfPlayers === 0){\n      return <button className=\"startNewGame\" onClick={method}>Start New Game </button>\n    }\n  },\n\n  checkIfCanRoll(props, method){\n    if (!props.rolled){\n      return <button className=\"rolldicebutton\" onClick={method}> Roll Dice </button>\n    }else{\n      return <button className=\"rolldicebutton\" disabled onClick={method}> Roll Dice </button>\n    }\n  },\n\n  checkIfCanBuyProperty(square, method){\n    if (square.owner === null && square.purchasePrice > 0) {\n      return <button className=\"BuyProperty\" onClick={method}>Buy Property</button>\n    } else {\n      return <button className=\"BuyProperty\" disabled onClick={method}>Buy Property</button>\n    }\n  },\n\n  checkIfTurnEnd(props){\n    if(props.rolled){\n      return <EndTurn updateActivePlayer={props.updateActivePlayer} />\n    }\n  },\n\n  checkIfGameStarted(props){\n    if(props.players.length > 0){\n      return <Dice\n        moveValue={props.moveValue}\n        rolled={props.rolled}\n        won={props.won}\n        doubleCount={props.doubleCount}\n        setMoveValue={props.setMoveValue}\n        updateRolled={props.updateRolled}\n        updatePlayerPosition={props.updatePlayerPosition}\n        updateDoubleCount={props.updateDoubleCount}\n      />\n    }\n  }\n\n}\n\nexport default buttonLogic;\n","import React, {Component} from 'react';\nimport diceLogic from '../helpers/logic/DiceLogic';\nimport buttonLogic from '../helpers/logic/ButtonLogic';\n\nclass Dice extends Component{\n\n  constructor(props){\n    super(props)\n    this.state = {\n      rollMessage: \"\",\n      doubleRollMessage: \"\",\n      firstFace: null,\n      secondFace: null\n    }\n    this.handleRollDiceClick = this.handleRollDiceClick.bind(this)\n  }\n\n  getRandomRoll(){\n    return Math.floor(Math.random() * (6 - 1 + 1)) + 1;\n  }\n\n  handleRollDiceClick(){\n    // Resets message when re-rolling\n    this.setState({doubleRollMessage: ''})\n    this.setState({rollMessage: ''})\n    // Prevent roll if player has already rolled, or the game is won\n    if (!this.props.rolled && !this.props.won){\n      // variable setup for helper file\n      let firstDiceValue = this.getRandomRoll()\n      let secondDiceValue = this.getRandomRoll()\n      let newValue = firstDiceValue + secondDiceValue\n      let props = this.props;\n      //Sets the value to be moved by the player\n      props.setMoveValue(newValue)\n\n      //Determines whether a double was rolled, and the actions required e.g.able to roll again, count # of cumulative doubles\n      diceLogic.checkForDouble(firstDiceValue, secondDiceValue, newValue, props)\n      if (diceLogic.checkIfDouble(firstDiceValue, secondDiceValue)){\n        this.setState({doubleRollMessage: \"Rolled a double \" + firstDiceValue + \"! Roll again!\"})\n      } else {\n        this.setState({rollMessage: \"You rolled \" + newValue + \"!\"})\n      }\n      //Sets state to use for rendering dice faces\n      this.setState({firstFace: diceLogic.showDiceFace(firstDiceValue)})\n      this.setState({secondFace: diceLogic.showDiceFace(secondDiceValue)})\n    }\n  }\n\n  render(){\n\n    const diceStyle = {\n      position: \"absolute\",\n      border: '1px solid black',\n      height: '50px',\n      width: '50px',\n      left: '200px'\n    }\n    const diceStyle2 = {\n      position: \"absolute\",\n      border: '1px solid black',\n      height: '50px',\n      width: '50px',\n      left: '150px'\n    }\n\n    let rollDiceButton = buttonLogic.checkIfCanRoll(this.props, this.handleRollDiceClick)\n\n    return(\n      <div className=\"dice-div\">\n        {rollDiceButton}\n        <img style={diceStyle} src={this.state.firstFace} />\n        <img style={diceStyle2} src={this.state.secondFace} />\n        <p>{this.state.rollMessage}</p>\n        <p>{this.state.doubleRollMessage}</p>\n      </div>\n    );\n\n\n  }\n\n}\n\nexport default Dice;\n","import React, {Component} from 'react';\nimport buttonLogic from '../helpers/logic/ButtonLogic';\n\nclass Purchase extends Component{\n\n  constructor(props){\n    super(props)\n    this.state = {\n    }\n\n    this.handleBuyProperty = this.handleBuyProperty.bind(this)\n  }\n\n  handleBuyProperty(){\n    this.props.purchaseProperty()\n  }\n\n  render(){\n    let currentSquare = this.props.squares[this.props.activePlayer.position]\n    let purchaseButton = buttonLogic.checkIfCanBuyProperty(currentSquare, this.handleBuyProperty)\n\n    return(\n      <div>\n        {purchaseButton}\n      </div>\n    )\n  }\n\n\n}\n\nexport default Purchase;\n","import React, {Component, useState}  from 'react';\nimport Dice from '../components/Dice';\nimport Purchase from '../components/Purchase';\nimport buttonLogic from '../helpers/logic/ButtonLogic'\n\nclass PlayerInterface extends Component {\n  constructor(props){\n    super(props);\n\n\n    this.handleManageProperty = this.handleManageProperty.bind(this);\n    this.getPropertyList = this.getPropertyList.bind(this);\n  }\n  //Pass in current player\n  //Get list of props\n  //Display list\n\n  getPropertyList(){\n    return this.props.activePlayer.properties.map((property) => {\n      return <details><summary><li className=\"propertyListItem\">{property.name}</li></summary><button>Mortgage</button></details>\n    })\n  }\n\n  //Manage Prop\n  handleManageProperty(){\n    console.log(\"Manage Prop\");\n  }\n\n  render(){\n\n    let propertyList = this.getPropertyList();\n    return(\n      <div>\n      <Purchase\n        purchaseProperty={this.props.purchaseProperty}\n        activePlayer={this.props.activePlayer}\n        squares={this.props.squares}\n        />\n        <div className=\"propertyListDiv\">\n          <ul className=\"propertyList\">\n            <p className=\"propertyListText\"></p>\n            {propertyList}\n          </ul>\n        </div>\n      </div>\n\n    )\n  }\n\n}\n\nexport default PlayerInterface;\n","import React, {Component} from 'react';\n\nclass HoverZoom extends Component {\n\n  //Track mouse position and pass to document.elementFromPoint to get element?\n  //Use mouse hover?\n\n  generateCardInfo(){\n    if(this.props.currentTile.rents == null || this.props.currentTile.name.includes(\"Chance\") || this.props.currentTile.name.includes(\"Community\") || this.props.currentTile.name.includes(\"Tax\")){\n      return(<p></p>)\n    }\n\n    if(this.props.currentTile.name.includes(\"Station\")){\n      return(\n        <div>\n        <p className=\"tileText\">Rent _______________ £25 </p>\n        <p className=\"tileText\">If 2 Stations are owned £50</p>\n        <p className=\"tileText\">If 3 Stations are owned £100</p>\n        <p className=\"tileText\">If 4 Stations are owned £200</p>\n        </div>\n      )\n    }\n\n    return(\n      <div>\n      <p className=\"tileText\">Rent _______________ £{this.props.currentTile.rents[0]}</p>\n      <p className=\"tileText\">Full Set £{this.props.currentTile.rents[0]*2}</p>\n      <p className=\"tileText\">With 1 House ____ £{this.props.currentTile.rents[1]}</p>\n      <p className=\"tileText\">With 2 Houses  ___ £{this.props.currentTile.rents[2]}</p>\n      <p className=\"tileText\">With 3 Houses ___ £{this.props.currentTile.rents[3]}</p>\n      <p className=\"tileText\">With 4 Houses  ___ £{this.props.currentTile.rents[4]}</p>\n      <p className=\"tileText\">With Hotel ______________ £{this.props.currentTile.rents[5]}</p>\n      <p className=\"tileText\">_____________________________</p>\n      <p className=\"tileText\">Houses Cost _________ £{this.props.currentTile.buildCost}</p>\n      <p className=\"tileText\">Hotels Cost __________ £{this.props.currentTile.buildCost}</p>\n      </div>\n    )\n  }\n\n  render(){\n    if(this.props.currentTile == null){\n      return <p></p>\n    }\n\n    const info = this.generateCardInfo();\n\n    return(\n      <div className=\"HoverZoomCard\">\n      <div style={{background : this.props.currentTile.setColor}} className=\"HoverZoomCardTitleBox\">\n      <p className=\"tileText\" style={{fontSize: 20 + 'px'}} >{this.props.currentTile.name}</p>\n      </div>\n      <div className=\"HoverZoomCardInfo\">\n      {info}\n      </div>\n      </div>\n    )\n  }\n}\n\nexport default HoverZoom;\n","import React from 'react';\nimport Square from './Square.js';\n\n\nconst BoardSide = (props) => {\n\n  if(!props){\n    return (<p>Loading</p>)\n  }\n\n  function isCornerBlock(square){\n    if(square.name === \"Go\" || square.name === \"Jail\" || square.name === \"Free Parking\" || square.name === \"Go to Jail\"){\n      return true;\n    }\n    return false;\n  }\n\n  function isColour(colour){\n    var style = new Option().style;\n    style.color = colour;\n    return style.color == colour;\n  }\n\n  function returnSquare(square){\n    //Check if setColour != color\n    if(!isColour(square.setColor)){\n      return <Square key={square.squareNumber} card={square} type=\"non-set\" />\n    }\n    //if not colour go to return non setSqaure\n    return  <Square key={square.squareNumber} card={square}/>\n  }\n\n  function returnCorner(square){\n    return   <Square key={square.squareNumber} card={square} type={\"Corner\"} cornerImage={props.cornerImage} />\n  }\n\n\tconst squares = props.squares.map((square, index) => {\n    //Corner Square\n    if(isCornerBlock(square)){\n      return (returnCorner(square))\n    }else{ //Normal Square\n      return (returnSquare(square))\n    }\n\t})\n\n\treturn(\n    <div className={props.boardSide}>\n\t\t{squares}\n    </div>\n\t)\n}\nexport default BoardSide;\n","class Vec2 {\n  constructor(x,y){\n    this.x = x;\n    this.y = y;\n  }\n}\nexport default Vec2;\n","import Vec2 from '../helpers/Vec2';\n\nclass RenderHelper {\n  constructor(canvas, ctx){\n      this.canvas = canvas;\n      this.ctx = ctx;\n      this.p1 = 0;\n      this.p2 = 0;\n      this.p3 = 0;\n      this.p4 = 0;\n      this.players = [this.p1,this.p2,this.p3,this.p4];\n  }\n\n  testFunction(){\n\n  }\n\n  moveAndRenderLoop(playerIndex, targetIndex){\n    //check\n\n    if(/*this.players[playerIndex] < this.props.players[playerIndex].position*/true){\n      //clear\n      this.clearCanvas();\n\n      //move\n      this.players[playerIndex] += 1;\n\n      //render\n      this.renderAllPlayers();\n\n      //wait - loop\n      setTimeout(() => {\n        this.moveAndRenderLoop();\n      }, 250);\n    }\n\n  }\n\n  renderPlayer(positionIndex, color, offset){\n    let position = this.calculateCoordinates(positionIndex);\n    this.ctx.beginPath();\n    this.ctx.arc(position.x + 25 + offset, position.y + 25 + offset, 15, 0, 2 * Math.PI);\n    this.ctx.fillStyle = color;\n    this.ctx.fill();\n\n    this.ctx.arc(position.x + 25 + offset, position.y + 25 + offset, 15, 0, 2 * Math.PI);\n    this.ctx.fillStyle = \"white\";\n    this.ctx.stroke();\n\n  }\n\n  calculateCoordinates(index){\n    //position 1\n    const baseX = 570;\n    const baseY = 650;\n    const tileWidth = 60;\n\n    //Player on Go\n    if(index == 0){\n        return new Vec2(baseX + 80,baseY);\n    }else if (index < 10) {//Player on bottom row\n          return new Vec2(baseX-((index-1)*tileWidth),baseY);\n    }else if (index == 10) {//Player is on JAIL\n        return new Vec2(10,baseY-((index-10)*(tileWidth+2)));\n    }else if (index < 20) {//Player on left column\n        return new Vec2(10,baseY-((index-10)*(tileWidth+2)));\n    }else if (index == 20) {//Player on FREE PARKING\n        return new Vec2(10,10);\n    }else if (index < 30) {//Player on top row\n      return new Vec2(40+(index-20)*tileWidth,10);\n    }else if (index == 30) {//Player on GO TO JAIL\n        return new Vec2(baseX + 80,10);\n    }else if (index <= 40) {//Player on right column\n      return new Vec2(baseX+80, 40 + ((index-30)*tileWidth));\n    }\n\n  }\n\n  clearCanvas(){\n    this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height);\n  }\n\n  renderPlayersFromProps(playerprops){\n    this.clearCanvas();\n    for(let i=0; i<playerprops.length;i++){\n      //Using local players to position and props players for colour\n      this.renderPlayer(playerprops[i].position, playerprops[i].color, i*4);\n    }\n  }\n\n\n\n}\n\nexport default RenderHelper;\n","import React, {Component} from 'react';\nimport RenderHelper from '../helpers/RenderHelperClass'\nimport tilePositions from '../helpers/tilePositions';\nimport Vec2 from '../helpers/Vec2';\n\nclass Renderer extends Component {\n\n  constructor(props) {\n      super(props);\n      this.state = {\n        renderer: {},\n        playerPositions : [0,0,0,0]\n      }\n\n  }\n\n  //Animate Movement\n  animatePlayer(){\n  }\n\n  moveOneAndRender(current, renderer){\n    //renderer.renderPlayer(current, \"red\");\n  }\n\n  componentDidMount() {\n     const canvas = this.refs.canvas\n     const ctx = canvas.getContext(\"2d\")\n     const renderer = new RenderHelper(canvas, ctx);\n     this.setState({renderer : renderer},() => {\n       this.state.renderer.renderPlayersFromProps(this.props.players)\n     });\n\n  }\n\n  renderPlayers(){\n\n  }\n\n  playerPosChanged(){\n    let index = 0;\n    if(this.state.playerPositions[0] != this.props.players[0].position){\n      return true;\n    }\n\n    if(this.state.playerPositions[1] != this.props.players[1].position){\n      return true;\n    }\n\n  }\n\n  render(){\n    if(this.props.players.length != 0){\n      if(this.playerPosChanged()){\n          this.state.renderer.renderPlayersFromProps(this.props.players);\n      }\n\n\n    }\n\n    return (\n          <canvas ref=\"canvas\" className=\"canvas\" id=\"myCanvas\" width=\"720\" height=\"720\"></canvas>\n    )\n  }\n}\n\nexport default Renderer;\n","import React, {Component} from 'react';\nimport Square from '../components/Square'\nimport Dice from '../components/Dice'\nimport PlayerInterface from '../components/PlayerInterface'\nimport HoverZoom from '../components/HoverZoom'\nimport BoardSide from '../components/BoardSide'\nimport Renderer from '../containers/Renderer'\nimport buttonLogic from '../helpers/logic/ButtonLogic'\n//A unit is one tile width\n//Board is 13 units wide... 9 Property slots then 2 slots at each end for corner slots\nclass Board extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state ={\n      currentTileSelected : {},\n    }\n\n    this.handleMouseMove = this.handleMouseMove.bind(this);\n  }\n\n  componentDidMount(){\n    this.props.updateMessage(\"Player1's turn to roll!\")\n  }\n\n  handleLoading(){\n    return <p className=\"tileText\"> Waiting for Game to Start </p>\n  }\n\n handleMouseMove(event){\n   let x = event.clientX;\n   let y = event.clientY;\n   let elem = document.elementFromPoint(x,y);\n\n   if(elem.className == \"tile\"){\n     let tileIndex = elem.title;\n     this.setState({currentTileSelected : this.props.squares[tileIndex]})\n   }else{\n     this.setState({currentTileSelected : null})\n   }\n }\n\n  getHoverComponent(){\n    if(this.state.currentTileSelected != null){\n      return <HoverZoom currentTile={this.state.currentTileSelected}/>\n    }\n  }\n\n  render(){\n\n    let bottomrow = (<p>LOADING</p>);\n    const go = \"images/go.png\";\n    const jail = \"images/jail.png\";\n    const freeParking = \"images/FreeParking.png\";\n    const goToJail = \"images/gotojail.png\";\n    const props = this.props;\n\n    let endButton = buttonLogic.checkIfTurnEnd(props)\n    let dice = buttonLogic.checkIfGameStarted(props)\n    let hoverComponent = this.getHoverComponent();\n\n    if(this.props.squares.length <= 0){\n      return this.handleLoading();\n    } else {\n\n      const bottomrow = this.props.squares.slice(0,10).reverse();\n      const leftrow = this.props.squares.slice(10,20).reverse();\n      const toprow = this.props.squares.slice(20,30);\n      const rightrow = this.props.squares.slice(30,40);\n\n\n      return(\n        <div onMouseMove={this.handleMouseMove}>\n          {hoverComponent}\n          <Renderer players={this.props.players} board={this.boardElement} />\n          <div ref=\"board\" className=\"Board\">\n            <img className=\"centreImage\" src=\"images/monopolyman.png\"/>\n              <BoardSide squares={bottomrow} cornerImage={go} boardSide={\"BottomRow\"}/>\n              <BoardSide squares={leftrow} cornerImage={jail} boardSide={\"LeftColumn\"}/>\n              <BoardSide squares={toprow} cornerImage={freeParking} boardSide={\"TopRow\"}/>\n              <BoardSide squares={rightrow} cornerImage={goToJail} boardSide={\"RightColumn\"}/>\n          </div>\n        <div className=\"playerInterface\">\n        <PlayerInterface\n          purchaseProperty={this.props.purchaseProperty}\n          activePlayer={this.props.activePlayer}\n          squares={this.props.squares}/>\n        {dice}\n        {endButton}\n        {this.renderInit}\n        </div>\n      </div>\n    )\n    }\n  }\n  }\n\n\nexport default Board;\n","import React, {Component} from 'react';\n\nclass PlayerStatus extends Component{\n\nconstructor(props){\n  super(props);\n}\n\n  generatePlayerStatusElements(player, activePlayer){\n    if(activePlayer){\n      return(\n        <div key={player.name}>\n        <div style={{backgroundColor : player.color}}><span>{player.name}  £{player.money}</span></div>\n        <div style={{backgroundColor : player.color}}><span>{player.colour}</span></div>\n        </div>\n      )\n    }else{\n      return(\n        <div key={player.name}>\n        <div><span>{player.name}  £{player.money}</span></div>\n        <div><span>{player.colour}</span></div>\n        </div>\n      )\n    }\n  }\n\n  render() {\n\n    const players = this.props.players.map((player) => {\n        let activePlayerBool = player == this.props.activePlayer\n        return this.generatePlayerStatusElements(player,activePlayerBool)\n    })\n\n    return(\n      <div className=\"playerStatus\">\n      {players}\n      </div>\n\n    );\n\n\n}\n}\n\nexport default PlayerStatus\n","import React from 'react';\nimport PlayerStatus from '../../components/PlayerStatus';\n\nconst displayLogic = {\n\n  checkIfStatusCanDisplay(state){\n    if(state.players.length > 0){\n      return <PlayerStatus\n        players={state.players}\n        activePlayer={state.activePlayer}\n      />\n    }\n  }\n\n}\n\nexport default displayLogic;\n","const actionLogic = {\n\n  checkCurrentAction(state, moveValue){\n    let currentSquare = state.squares[state.activePlayer.position]\n    let player = state.activePlayer\n\n    if (currentSquare.setColor === \"tax\"){\n      this.payTax(currentSquare, player)\n    } else if (currentSquare.setColor === \"communitychest\" || currentSquare.setColor === \"chance\") {\n      this.pickBonusCard(currentSquare, player, state)\n    } else if (currentSquare.squareNumber === 30) {\n      this.goToJail(player)\n    } else if (currentSquare.owner !== null && currentSquare.owner !== player) {\n      this.payRent(currentSquare, player, moveValue)\n    }\n    state.additionalAction = this.determineMessage(currentSquare, player, moveValue)\n  },\n\n  determineMessage(square, player, moveValue){\n\n    if (square.owner !== null && square.owner !== player) {\n      if (square.setColor === \"utility\") {\n        return \"Paid £\" + (square.rents[square.rentLevel] * moveValue) + \" in rent to \" + square.owner.name\n      }else{\n        return \"Paid £\" + square.rents[square.rentLevel] + \" in rent to \" + square.owner.name\n      }\n    }else if (square.setColor === \"tax\") {\n      return \"Paid £\" + square.rents[0] + \" in taxes!\"\n    }else if (square.squareNumber === 30) {\n      return player.name + \" was sent directly to jail without passing GO!\"\n    }else{\n      return \"\"\n    }\n  },\n\n  payRent(square, player, moveValue){\n      player.payRent(square, moveValue)\n      square.owner.receiveRent(square, moveValue)\n  },\n\n  payTax(square, player){\n    player.money -= square.rents[square.rentLevel]\n    alert(\"Landed on \" + square.name + \"! Paid £\" + square.rents[square.rentLevel] + \" in taxes.\")\n  },\n\n  pickBonusCard(square, player, state){\n    if(square.name === \"Chance\") {\n      let card = this.drawAndReplaceChance(state)\n      card.determineMethod(player, state.players)\n    } else {\n      let card = this.drawAndReplaceChest(state)\n      card.determineMethod(player, state.players)\n    }\n  },\n\n  drawAndReplaceChance(state){\n    let card = state.chanceCards.shift()\n    state.chanceCards.push(card)\n    return card\n  },\n\n  drawAndReplaceChest(state){\n    let card = state.chestCards.shift()\n    state.chestCards.push(card)\n    return card\n  },\n\n  goToJail(player){\n    player.position = 10\n    player.inJail = true\n  }\n\n\n}\n\nexport default actionLogic;\n","class Request {\n\n  get(url){\n    return fetch(url)\n    .then((res) => res.json());\n  }\n\n}\n\nexport default Request;\n","import React, {Component, useState}  from 'react';\nimport Card from '../models/Card';\nimport Square from '../models/Square';\nimport Player from '../models/Player';\nimport Board from '../containers/Board';\nimport PlayerStatus from '../components/PlayerStatus';\nimport PlayerInterface from '../components/PlayerInterface';\nimport buttonLogic from '../helpers/logic/ButtonLogic';\nimport displayLogic from '../helpers/logic/DisplayLogic';\nimport actionLogic from '../helpers/logic/ActionLogic';\nimport Request from '../helpers/Request';\n\nclass Game extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: [],\n      chanceCards: [],\n      chestCards: [],\n      rolled: false,\n      won: false,\n      moveValue: null,\n      doubleCount: 0,\n      activePlayer: null,\n      activePlayerIndex: null,\n      players: [],\n      mostRecentAction: \"\",\n      additionalAction: \"\"\n    }\n\n    this.setMoveValue = this.setMoveValue.bind(this);\n    this.updateRolled = this.updateRolled.bind(this);\n    this.updateDoubleCount = this.updateDoubleCount.bind(this);\n    this.updatePlayerPosition = this.updatePlayerPosition.bind(this);\n    this.startNewGame = this.startNewGame.bind(this);\n    this.updateActivePlayer = this.updateActivePlayer.bind(this);\n    this.purchaseProperty = this.purchaseProperty.bind(this);\n    this.updateMessage = this.updateMessage.bind(this);\n  }\n\n  componentDidMount(){\n    const request = new Request();\n\n    request.get('/cards')\n    .then((data) => {\n      for (let card of data) {\n        if(card.name === \"Chance\"){\n          this.state.chanceCards.push(new Card(card.name, card.information, card.method, card.adjuster))\n        } else {\n          this.state.chestCards.push(new Card(card.name, card.information, card.method, card.adjuster))\n        }\n      }\n    })\n\n    request.get('/squares')\n    .then((data) => {\n      for (let square of data) {\n        this.state.squares.push(new Square(square.name, square.squareNumber, square.setColour, square.purchasePrice, square.rents, square.buildCost))\n      }\n    })\n  }\n\n  updateMessage(inMesage){\n    this.setState({mostRecentAction : inMesage })\n  }\n\n  startNewGame(){\n    this.state.players.push(new Player('Danny', '#01E2FD'))\n    this.state.players.push(new Player('Lindsey', '#75FF33'))\n    this.state.players.push(new Player('Calum', '#FD6101'))\n    this.state.players.push(new Player('Pablo','#BE33FF'))\n\n    this.setState({\n      moveValue: null,\n      activePlayer: this.state.players[0],\n      activePlayerIndex: 0,\n      chanceCards: this.shuffleCards(this.state.chanceCards),\n      chestCards: this.shuffleCards(this.state.chestCards)\n\n    })\n\n  }\n\n  shuffleCards(array){\n    for (let i = array.length -1; i > 0; i--) {\n      let j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]]\n    }\n    return array;\n\n  }\n\n    setMoveValue(newValue){\n      this.setState({moveValue: newValue})\n    }\n\n    generateMoveString(moveCount){\n      return this.getActivePlayer().name + \" moved \" + moveCount + \" spaces, landing on \" + this.state.squares[this.state.activePlayer.position].name + \". \" + this.state.additionalAction;\n    }\n\n    updateRolled(){\n      this.setState({rolled: true})\n    }\n\n    updateDoubleCount(newValue){\n      this.setState({doubleCount: this.state.doubleCount + newValue})\n    }\n\n    // Double will be used to check if the player can leave jail once implemented\n    updatePlayerPosition(moveValue, double){\n      this.setState({\n        additionalAction: \"\"\n      })\n      this.state.activePlayer.updatePosition(moveValue)\n      actionLogic.checkCurrentAction(this.state, moveValue)\n      this.updateMessage(this.generateMoveString(moveValue))\n    }\n\n    updateActivePlayer(){\n      if(this.state.rolled){\n        const newIndex = (this.state.activePlayerIndex +1) % (this.state.players.length)\n        this.setState({\n          activePlayer: this.state.players[newIndex],\n          activePlayerIndex: newIndex,\n          moveValue: null,\n          rolled: false,\n        },() => {\n             this.updateMessageActivePlayer(this.getActivePlayer())\n        })\n      }\n    }\n\n    updateMessageActivePlayer(newPlayer){\n      this.updateMessage(this.generateNewTurnString(newPlayer))\n    }\n\n    generateNewTurnString(newPlayer){\n      return newPlayer.name + \"'s turn! \"\n    }\n\n\n    purchaseProperty(){\n      let activePlayer = this.state.activePlayer\n      let currentProperty = this.state.squares[activePlayer.position]\n\n      activePlayer.buyProperty(currentProperty)\n      currentProperty.owner = activePlayer\n      this.updateMessagePropertyBought(currentProperty);\n\n      if(currentProperty.setColor === \"utility\"){\n        let set = activePlayer.partsOfSetOwned(currentProperty)\n        set.forEach(utility => utility.rentLevel = (set.length - 1))\n      } else if (currentProperty.setColor === \"station\"){\n          let set = activePlayer.partsOfSetOwned(currentProperty)\n          set.forEach(station => station.rentLevel = (set.length -1))\n      }\n\n      this.setState({activePlayer: activePlayer});\n    }\n\n    updateMessagePropertyBought(currentProperty){\n      this.updateMessage(this.state.activePlayer.name +  \" bought \" + currentProperty.name + \" for £\" + currentProperty.purchasePrice);\n    }\n\n    getActivePlayer(){\n      return this.state.players[this.state.activePlayerIndex];\n    }\n\n    returnMessage(){\n      if(this.state.players.length == 0){\n        return (\n        <p></p>\n        )\n      }else{\n        return(\n          <div className=\"mostRecentAction\">\n          <p>{this.state.mostRecentAction}</p>\n          </div>\n        )\n      }\n    }\n\n\n\n\n\nrender(){\n\nconst state = this.state;\n\nlet newGameButton = buttonLogic.checkIfCurrentGame(state.players.length, this.startNewGame);\nlet playerStatus = displayLogic.checkIfStatusCanDisplay(state)\nlet mostRecentActionDisplay = this.returnMessage();\n\n  return(\n    <div>\n      {mostRecentActionDisplay}\n      <Board\n        squares={state.squares}\n        moveValue={state.moveValue}\n        rolled={state.rolled}\n        won={state.won}\n        doubleCount={state.doubleCount}\n        setMoveValue={this.setMoveValue}\n        updateRolled={this.updateRolled}\n        updateDoubleCount={this.updateDoubleCount}\n        updatePlayerPosition={this.updatePlayerPosition}\n        updateActivePlayer={this.updateActivePlayer}\n        players={state.players}\n        purchaseProperty={this.purchaseProperty}\n        activePlayer={state.activePlayer}\n        updateMessage={this.updateMessage}\n        />\n      {newGameButton}\n      {playerStatus}\n\n    </div>\n  )\n}\n\n}\n\nexport default Game;\n","import React, {Component} from 'react';\nimport './App.css';\nimport Game from './containers/Game'\n\nclass App extends Component {\n  render(){\n  return (<div>\n    <Game />\n    </div>)\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}